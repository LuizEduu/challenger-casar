generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl", "linux-musl-openssl-3.0.x", "rhel-openssl-3.0.x"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  name      String
  createdAt DateTime @default(now()) @map("created_at")

  posts     Post[]
  followers Follower[] @relation("follower_user_foreign")
  followeds Follower[] @relation("followed_user_foreign")
  comments  Comment[]

  @@map("users")
}

model Post {
  id             String    @id @default(cuid())
  content        String
  ownerId        String    @map("owner_id")
  originalPostId String?   @map("original_post_id")
  createdAt      DateTime  @default(now()) @map("created_at")
  owner          User      @relation(fields: [ownerId], references: [id])
  comment        Comment[]

  @@map("posts")
}

model Follower {
  id         String   @id @default(cuid())
  followerId String   @map("follower_id")
  followedId String   @map("followed_id")
  followedAt DateTime @default(now()) @map("followed_at")

  follower User @relation(fields: [followerId], references: [id], name: "follower_user_foreign")
  followed User @relation(fields: [followedId], references: [id], name: "followed_user_foreign")

  @@map("followers")
}

model Comment {
  id        String   @id @default(cuid())
  content   String
  postId    String   @map("post_id")
  ownerId   String   @map("owner_id")
  createdAt DateTime @default(now()) @map("created_at")

  post  Post @relation(fields: [postId], references: [id])
  owner User @relation(fields: [ownerId], references: [id])
}
